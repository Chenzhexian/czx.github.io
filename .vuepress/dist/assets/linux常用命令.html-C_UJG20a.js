import{_ as a,o as e,c as s,e as n}from"./app-CzSBTTj3.js";const l={},i=n(`<h1 id="linux常用命令" tabindex="-1"><a class="header-anchor" href="#linux常用命令"><span>linux常用命令</span></a></h1><hr><h3 id="打包压缩" tabindex="-1"><a class="header-anchor" href="#打包压缩"><span>打包压缩</span></a></h3><p>将文件夹<code>mydata</code>,打包压缩并保留原文件,生成新的文件<code>backup.tar.gz</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-cvzf</span> backup.tar.gz /mydata
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>具体解释：</p><ul><li>c: 创建一个新的压缩文件。</li><li>v: 显示详细信息，让你能够看到压缩的过程。</li><li>z: 使用gzip进行压缩。</li><li>f: 指定压缩文件的名称。</li></ul><h3 id="解压" tabindex="-1"><a class="header-anchor" href="#解压"><span>解压</span></a></h3><p>将文件<code>backup.tar.gz</code>解压到当前路径下</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xvzf</span> backup.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>具体解释：</p><ul><li>x: 解压文件。</li><li>v: 显示详细信息，以便查看解压过程。</li><li>z: 使用gzip进行解压。</li><li>f: 指定要解压的文件。</li></ul><h3 id="查看java进程" tabindex="-1"><a class="header-anchor" href="#查看java进程"><span>查看java进程</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token function">java</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>具体解释：</p><ul><li><code>-ef</code>: 显示所有进程。</li><li><code>|grep</code> 后面可以换成其他关键字</li></ul><h3 id="停止进程" tabindex="-1"><a class="header-anchor" href="#停止进程"><span>停止进程</span></a></h3><p>使用<code>ps</code>命令后可以看到进程的<code>pid</code>,可以通过<code>pid</code>关闭进程</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#例如pid为1234</span>
<span class="token function">kill</span> <span class="token number">1234</span>
<span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token number">1234</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体解释：</p><ul><li><code>-9</code>: 表示强制终止，如果常规的<code>kill</code>命令无法正常停止进程时可以使用 。</li></ul><h3 id="内存使用分析" tabindex="-1"><a class="header-anchor" href="#内存使用分析"><span>内存使用分析</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">free</span> <span class="token parameter variable">-h</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>具体解释：</p><ul><li><code>-h</code>: 会将字节（Bytes）转换为更大的单位，例如千字节（KB）、兆字节（MB）、千兆字节（GB）等，以避免在显示大量数据时导致混淆。</li></ul><p>当你执行<code>free -h</code>命令时，它会显示系统的内存使用情况，<code>-h</code>表示以人类可读的方式。以下是 free -h 输出的示例：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>            total        used        free      shared  buff/cache   available
Mem:         7.7G        3.2G        489M        788K        4.0G        4.1G
Swap:        2.0G         32M        1.9G
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让我们逐一解释每一列的含义：</p><ol><li><p><code>total</code>： 总内存，表示系统上物理内存的总量。在示例中，总内存为 7.7 GB。</p></li><li><p><code>used</code>： 已使用的内存，表示系统当前正在使用的物理内存。在示例中，已使用的内存为 3.2 GB。</p></li><li><p><code>free</code>： 空闲内存，表示系统当前未被使用的物理内存。在示例中，空闲内存为 489 MB。</p></li><li><p><code>shared</code>： 共享内存，表示被多个进程共享的内存。在示例中，共享内存为 788 KB。</p></li><li><p><code>buff/cache</code>： 缓存和缓冲区内存，表示系统用于缓存文件系统和其它 I/O 操作的内存。在示例中，缓存和缓冲区内存为 4.0 GB。</p></li><li><p><code>available</code>： 可用内存，表示系统中仍然可用于分配给新进程的内存。在示例中，可用内存为 4.1 GB。</p></li><li><p><code>Swap</code>： 交换空间，表示系统用于交换数据的磁盘空间。Swap是一种虚拟内存，当物理内存不足时，系统会将一些不常用的数据写入交换空间。在示例中，总交换空间为 2.0 GB，已使用 32 MB，剩余 1.9 GB。</p></li></ol><p>还可以使用<code>top</code>实时查看系统性能统计和当前运行进程信息：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">top</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查看端口使用情况" tabindex="-1"><a class="header-anchor" href="#查看端口使用情况"><span>查看端口使用情况</span></a></h3><ol><li>使用<code>netstat</code>命令： <code>netstat</code>命令可以显示网络连接、路由表、接口状态等信息。以下是一些示例：</li></ol><ul><li>查看所有端口的使用情况：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-tulpn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将显示所有TCP和UDP端口的使用情况，以及占用这些端口的进程信息。</p><ul><li>查看指定端口的使用情况（例如，查看80端口）：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-tulpn</span> <span class="token operator">|</span> <span class="token function">grep</span> :80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>使用<code>ss</code>命令： <code>ss</code>是另一个用于查看套接字统计信息的命令，它比<code>netstat</code>更快速且效率更高。以下是一些示例：</li></ol><ul><li>查看所有端口的使用情况：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ss <span class="token parameter variable">-tulpn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看指定端口的使用情况（例如，查看80端口）：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ss <span class="token parameter variable">-tulpn</span> <span class="token operator">|</span> <span class="token function">grep</span> :80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>使用<code>lsof</code>命令： <code>lsof</code>命令用于列出打开文件的信息，也可以用于查看端口的使用情况。以下是一些示例：</li></ol><ul><li>查看所有端口的使用情况：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">lsof</span> <span class="token parameter variable">-i</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看指定端口的使用情况（例如，查看80端口）：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">lsof</span> <span class="token parameter variable">-i</span> :80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="防火墙配置" tabindex="-1"><a class="header-anchor" href="#防火墙配置"><span>防火墙配置</span></a></h3><p>配置<code>iptables</code>防火墙涉及到定义规则，这些规则用于控制网络流量。以下是一些基本的步骤和示例，可以帮助你配置 iptables：</p><ol><li>查看当前规则：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> iptables <span class="token parameter variable">-L</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这会列出当前防火墙规则。</p><ol start="2"><li>清空规则（可选）： 如果你之前已经设置了一些规则并希望清空它们，可以使用以下命令：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> iptables <span class="token parameter variable">-F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>设置默认策略：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> iptables <span class="token parameter variable">-P</span> INPUT ACCEPT
<span class="token function">sudo</span> iptables <span class="token parameter variable">-P</span> FORWARD ACCEPT
<span class="token function">sudo</span> iptables <span class="token parameter variable">-P</span> OUTPUT ACCEPT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将设置默认的策略为允许所有流量。你可以根据需要更改默认策略。</p><ol start="4"><li>允许本地回环：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-i</span> lo <span class="token parameter variable">-j</span> ACCEPT
<span class="token function">sudo</span> iptables <span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-o</span> lo <span class="token parameter variable">-j</span> ACCEPT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这样可以允许本地回环，确保本地进程可以通过localhost进行通信。</p><ol start="5"><li>允许已建立的连接和相关的流量：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-m</span> conntrack <span class="token parameter variable">--ctstate</span> ESTABLISHED,RELATED <span class="token parameter variable">-j</span> ACCEPT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样可以允许已经建立的连接和相关的流量。</p><ol start="6"><li>允许SSH连接：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">22</span> <span class="token parameter variable">-j</span> ACCEPT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这会允许SSH连接，确保你不会被锁定在SSH之外。</p><ol start="7"><li>允许其他需要的服务端口（根据你的需求）：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">80</span> <span class="token parameter variable">-j</span> ACCEPT  <span class="token comment"># 允许HTTP</span>
<span class="token function">sudo</span> iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">443</span> <span class="token parameter variable">-j</span> ACCEPT <span class="token comment"># 允许HTTPS</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>根据你的服务和需求，允许其他必要的端口。</p><ol start="8"><li>拒绝其余流量：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-j</span> DROP
<span class="token function">sudo</span> iptables <span class="token parameter variable">-A</span> FORWARD <span class="token parameter variable">-j</span> DROP
<span class="token function">sudo</span> iptables <span class="token parameter variable">-A</span> OUTPUT <span class="token parameter variable">-j</span> DROP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样会拒绝所有未匹配规则的流量。</p><ol start="9"><li>保存规则：</li></ol><p>在很多系统中，iptables规则不会在重启后保留。你可以使用以下命令保存规则：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> iptables save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者，具体取决于你的发行版，你可能需要使用不同的命令来保存规则。</p><h3 id="chmod修改权限的用法" tabindex="-1"><a class="header-anchor" href="#chmod修改权限的用法"><span>chmod修改权限的用法</span></a></h3><ol><li><p>语法：chmod [对谁操作] [操作符] [赋予的权限] 文件名</p></li><li><p>操作对象：</p></li></ol><ul><li><code>u</code> 用户user，表现文件或目录的所有者</li><li><code>g</code> 用户组group，表现文件或目录所属的用户组</li><li><code>o</code> 其他用户other</li><li><code>a</code> 所有用户all</li></ul><ol start="3"><li>操作符：</li></ol><ul><li><code>+</code> 添加权限</li><li><code>-</code> 减少权限</li><li><code>=</code> 直接给定一个权限</li></ul><ol start="4"><li>权限：</li></ol><ul><li><code>r</code> 读权限</li><li><code>w</code> 写权限</li><li><code>x</code> 执行权限</li></ul><h4 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h4><p>将文件 file1.txt 设为所有人皆可读取 :</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> ugo+r file1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将文件 file1.txt 设为所有人皆可读取 :</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> a+r file1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="另一种写法" tabindex="-1"><a class="header-anchor" href="#另一种写法"><span>另一种写法</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">765</span> file1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>765 将这样解释：</p><ul><li>所有者的权限用数字表达：属主的那三个权限位的数字加起来的总和。如 rwx ，也就是 4+2+1 ，应该是 7。</li><li>用户组的权限用数字表达：属组的那个权限位数字的相加的总和。如 rw- ，也就是 4+2+0 ，应该是 6。</li><li>其它用户的权限数字表达：其它用户权限位的数字相加的总和。如 r-x ，也就是 4+0+1 ，应该是 5。</li></ul>`,93),d=[i];function t(c,r){return e(),s("div",null,d)}const o=a(l,[["render",t],["__file","linux常用命令.html.vue"]]),u=JSON.parse('{"path":"/docs/technicalDocument/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html","title":"linux常用命令","lang":"zh-CN","frontmatter":{"title":"linux常用命令"},"headers":[{"level":3,"title":"打包压缩","slug":"打包压缩","link":"#打包压缩","children":[]},{"level":3,"title":"解压","slug":"解压","link":"#解压","children":[]},{"level":3,"title":"查看java进程","slug":"查看java进程","link":"#查看java进程","children":[]},{"level":3,"title":"停止进程","slug":"停止进程","link":"#停止进程","children":[]},{"level":3,"title":"内存使用分析","slug":"内存使用分析","link":"#内存使用分析","children":[]},{"level":3,"title":"查看端口使用情况","slug":"查看端口使用情况","link":"#查看端口使用情况","children":[]},{"level":3,"title":"防火墙配置","slug":"防火墙配置","link":"#防火墙配置","children":[]},{"level":3,"title":"chmod修改权限的用法","slug":"chmod修改权限的用法","link":"#chmod修改权限的用法","children":[]}],"git":{"updatedTime":1715061248000,"contributors":[{"name":"czx","email":"2504058202@qq.com","commits":1}]},"filePathRelative":"docs/technicalDocument/常用工具/linux常用命令.md"}');export{o as comp,u as data};
